// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import React, { useRef } from "react";
import { createPortal } from "react-dom";
import {
  useEventHandlers,
  useRootProps,
  combineRef,
  exists,
} from "./_internal_utils";
export function DialogRoot(props) {
  const ref = useRef();
  const { state } = useEventHandlers({
    ref,
    ...props,
  });
  const {
    style,
    injectedProps,
    className,
    tabIndex,
    testId,
    innerRef,
    role,
    values,
  } = useRootProps(props, state);
  const noSelectStyles = {
    userSelect: "none",
    WebkitUserSelect: "none",
    KhtmlUserSelect: "none",
    MozUserSelect: "none",
  };

  if (props.showInline) {
    return (
      <div
        ref={combineRef(innerRef, ref)}
        className={className}
        style={{ ...style, padding: 100 }}
      >
        {props.children(values)}
      </div>
    );
  }

  return props.isOpen
    ? createPortal(
        <div
          tabIndex={tabIndex}
          ref={combineRef(innerRef, ref)}
          role={role}
          data-testid={testId}
          {...(exists(injectedProps.reactProps)
            ? injectedProps.reactProps
            : {})}
          className={className}
          style={{
            ...style,
            ...noSelectStyles,
            display: "flex",
            position: "absolute",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
          }}
          onClick={(e) => {
            e.stopPropagation();
            props.onClose();
          }}
        >
          {props.children(values)}
        </div>,
        document.body
      )
    : null;
}
export function DialogContainerPrimitive(props) {
  return (
    <div onClick={(e) => e.stopPropagation()} className={props.className}>
      {props.children}
    </div>
  );
}
